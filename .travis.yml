language: c++
sudo: false
env: 
# defines the $FLUKA_USER env var
  FLUKA_USER:
  - secure: "TrH9jB6GqgiFSpRQg0MVnh+792SO3pLIF73rPvaJ/QSnFnDlwW2asF60CdNFQmw22L/7+OV5j/jKegvRUUSMiK32o/J8pcfLQrS2nDOrGXoLEFB1YolTJ/ZXHZSLg71jcwkY8Fr+ALgoL5fwITBAVOCpsZ7XssD9N4sgFQOJyIA="
# defines the $FLUKA_PASS env var
  FLUKA_PASS:
  - secure: "h4LNv39qBd3g8ls+SvMy0Fkreuq4CV7lv2NDWr6pG79a5obHbjxme9xojcvL3kAm5t9fKEDU7t+S8UUhCmQVdaV2qLBUaFIvr3Na6m3odJiqy433NemXGR1SkB4G9BR1eJVxgYZNqcN00uiWg4XI2p7FtNsbMzNSCEjTR3qwVa4="
  matrix:
    - MOAB_VERSION="Version4.7.0"
    - MOAB_VERSION="Version4.8.0"
    - MOAB_VERSION="Version4.8.1"
    - MOAB_VERSION="Version4.8.2"
    - MOAB_VERSION="master"
addons:
  apt:
    packages:
    - gfortran 
    - g++ 
    - build-essential 
    - cmake 
    - libblas-dev 
    - liblapack-dev
before_install:
  # find the start dir
  - export START="$PWD"
  # build cmake
  - git clone git://cmake.org/cmake.git custom_cmake
  - cd custom_cmake
  - git checkout master
  - mkdir bld
  - cd bld
  - cmake ../. -DCMAKE_INSTALL_PREFIX=$START/cmake
  - make -j2 > log-file 2>&1
  - make install
  - export PATH="$START/cmake/bin:$PATH"
  - cd ..
  - cd .. 
  # build hdf5
  - wget https://www.hdfgroup.org/ftp/HDF5/releases/hdf5-1.8.13/src/hdf5-1.8.13.tar.gz
  - tar -zxf hdf5-1.8.13.tar.gz
  - mv hdf5-1.8.13 hdf5
  - cd hdf5
  - mkdir bld
  - cd bld
  - ../configure --enable-shared --disable-debug --enable-optimize --prefix=$START/hdf5
  - make -j2 > log-file 2>&1
  - make install
  - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$START/hdf5/lib/"
  - export PATH="$START/hdf5/bin:$PATH"
  - cd ..
  - cd ..
  # build moab
  - git clone https://bitbucket.org/fathomteam/moab
  # git clone https://bitbucket.org/makeclean/moab
  - cd moab
  # git checkout master
  - git checkout $MOAB_VERSION
  - autoreconf -fi
  - mkdir bld
  - cd bld
  - ../configure --enable-dagmc --enable-shared --disable-debug --enable-optimize --with-hdf5=$START/hdf5 --prefix=$START/moab
  - make -j2 > log-file 2>&1
  - make install
  - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$START/moab/lib/"
  - export PATH="$START/moab/bin:$PATH"
  - cd ..
  - cd ..
  # build geant4
  - wget http://geant4.cern.ch/support/source/geant4.10.00.p02.tar.gz
  - tar -zxf geant4.10.00.p02.tar.gz
  - cd geant4.10.00.p02
  - mkdir bld
  - cd bld
  - pwd
  - cmake ../. -DCMAKE_INSTALL_PREFIX=$START/geant4.10.00.p02
  # geant4 compile takes 30 mins so need to use travis_wait
  - travis_wait make -j2
  - make install
  - export PATH="$START/geant4.10.00.p02/bin:$PATH"
  - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$START/geant4.10.00.p02/lib/"
  - cd ..
  - cd ..
  # build fluka
  - mkdir fluka2011
  - cd fluka2011
  - wget --tries 5 --auth-no-challenge --no-check-certificate --http-user $FLUKA_USER --http-password $FLUKA_PASS https://www.fluka.org/packages/fluka2011.2c-linux-gfor64bitAA.tar.gz
  - export FLUFOR=gfortran
  - tar -zxf fluka2011.2c-linux-gfor64bitAA.tar.gz
  - make
  - export FLUPRO=$PWD
  - cd ..
install:
  # build dagmc
  # - cd DAGMC
  - mkdir bld
  - cd bld
  - cmake ../. -DBUILD_TALLY=ON -DBUILD_FLUKA=ON -DFLUKA_DIR=$FLUPRO -DBUILD_GEANT4=ON -DGEANT4_DIR=$START/geant4.10.00.p02 -DCMAKE_INSTALL_PREFIX=$START/DAGMC
  - make 
  - make install
  - export LD_LIBRARY_PATH="$LD_LIBRARY_PATH:$START/DAGMC/lib"
  - cd ..
script:
  # move to test dir
  - cd $START/DAGMC/tests
  # run each test
  - ./dagsolid_unit_tests
  # no fludag yet
  - ./fludag_unit_tests
  - ./test_CellTally
  - ./test_KDEKernel
  - ./test_KDEMeshTally
  - ./test_KDENeighborhood
  - ./test_PolynomialKernel
  - ./test_Quadrature
  - ./test_Tally
  - ./test_TallyData
  - ./test_TallyEvent
  - ./test_TrackLengthMeshTally
  - ./uwuw_unit_tests
  - ./uwuw_unit_tests_tally
